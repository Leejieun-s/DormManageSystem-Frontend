{"remainingRequest":"D:\\SpringProject\\dormitory\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\SpringProject\\dormitory\\vue\\src\\components\\home_echarts.vue?vue&type=template&id=6d12c4aa","dependencies":[{"path":"D:\\SpringProject\\dormitory\\vue\\src\\components\\home_echarts.vue","mtime":1663038904000},{"path":"D:\\SpringProject\\dormitory\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663039140000},{"path":"D:\\SpringProject\\dormitory\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1663039144000},{"path":"D:\\SpringProject\\dormitory\\vue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1663039144000},{"path":"D:\\SpringProject\\dormitory\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663039140000},{"path":"D:\\SpringProject\\dormitory\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1663039142000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgaWQ9ImVjaGFydHMtZG9tIiBzdHlsZT0id2lkdGg6IDY1MHB4O2hlaWdodDogNTAwcHgiPjwvZGl2Pg0K"},{"version":3,"sources":["D:\\SpringProject\\dormitory\\vue\\src\\components\\home_echarts.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/SpringProject/dormitory/vue/src/components/home_echarts.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div id=\"echarts-dom\" style=\"width: 650px;height: 500px\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport request from \"@/utils/request\";\r\n\r\nrequire(\"echarts/theme/macarons\");\r\n\r\nexport default {\r\n  name: \"home_echarts\",\r\n  data() {\r\n    return {\r\n      option: {\r\n        barWidth: 35,\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: \"value\"\r\n        },\r\n        series: [\r\n          {\r\n            name: '人数',\r\n            type: 'bar',\r\n            data: []\r\n          },\r\n        ],\r\n        grid: {\r\n          x: 40,\r\n          y: 40,\r\n          x2: 40,\r\n          y2: 40,\r\n          borderWidth: 10,\r\n          top: '10%',\r\n          bottom: '0%',\r\n          containLabel: true\r\n        }\r\n      },\r\n      myEcharts: '',\r\n      chartWidth: '',\r\n      chartHeight: '',\r\n    };\r\n  },\r\n  created() {\r\n    this.getBuildingNum()\r\n  },\r\n  mounted() {\r\n    this.createEcharts()\r\n  },\r\n  watch: {\r\n    //观察option的变化\r\n    option: {\r\n      handler(newVal, oldVal) {\r\n        if (this.myEcharts) {\r\n          if (newVal) {\r\n            this.myEcharts.setOption(newVal);\r\n          } else {\r\n            this.myEcharts.setOption(oldVal);\r\n          }\r\n        } else {\r\n          this.createEcharts();\r\n        }\r\n      },\r\n      deep: true //对象内部属性的监听，关键。\r\n    }\r\n  },\r\n  methods: {\r\n    createEcharts() {\r\n      const chartDmo = document.getElementById(\"echarts-dom\");\r\n      this.myEcharts = echarts.init(chartDmo, null);\r\n      this.myEcharts.setOption(this.option, true);\r\n    },\r\n    getBuildingNum() {\r\n      //xAxis.data\r\n      request.get(\"/building/getBuildingName\").then(res => {\r\n        if (res.code === '0') {\r\n          this.option.xAxis.data = res.data\r\n          //series.data\r\n          request.get(\"/room/getEachBuildingStuNum/\" + res.data.length).then(result => {\r\n            if (result.code === '0') {\r\n              this.option.series[0].data = result.data\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}